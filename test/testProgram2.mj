program P
const int size = 10;
const bool isTrue = true;
const char robi = "R";
char lent;
const bool intBool = true;
int arr[];
bool boolArr[];
{

    int test()
    {
        return 1;
    }

    int test_func(int arr[])
    {
        arr[0]++;
        return arr[0];
    }

            int findMax(int arr[])
            int arrLen, maxNum;
            {
                if (arr == null)
                    return -1;

                arrLen = len(arr);
                //print(arrLen);

                if (arrLen == 0)
                    return 0;

                do{
                    arrLen--;
                    if (arrLen < 0)
                        break;

                    if (maxNum < arr[arrLen])
                        maxNum = arr[arrLen];

                }while(arrLen >= 0);


                return maxNum;
            }

    void main()
    int i, arr[];
    char helloWorld[];
    char readEol;
    {
            arr = new int[5];

            i = 2;
            arr[0] = 1;
            arr[1] = 1;
            do{
                arr[i] = arr[i - 1] + arr[i - 2];
                i++;
            }while(i < 5);

            i = findMax(arr);

            print(i);
            print(eol);

            helloWorld = new char[11];

            print("U");
            print("c");
            print("i");
            print("t");
            print("a");
            print("j");
            print(" ");
            print("c");
            print("h");
            print("a");
            print("r");
            print(eol);

            i = 0;
            do{
                read(helloWorld[i]);
                if (helloWorld[i] != eol)
                    i++;

            }while(i < 11);

            print(eol);
            print("I");
            print("s");
            print("p");
            print("i");
            print("s");
            print(eol);

            i = 0;
            do{
                print(helloWorld[i]);
                print(eol);

                i++;
            }while(i < 11);
    }
}











